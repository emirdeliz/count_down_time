// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "Existing Docker Compose (Extend)",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": ["docker-compose.yml"],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app-service",	

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/home/docker/apps",

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// An array of extension IDs that specify the extensions that should be installed inside the container when it is created.
	"extensions": [
		"Shan.code-settings-sync",
		"BadBoy17G.clara-copilot",
		"Dart-Code.dart-code",
		"Dart-Code.flutter"
	],
	// "postAttachCommand": "bash",

	// A command string or list of command arguments to run on the
	"initializeCommand": "cd .devcontainer && echo \"SYNC_NAME=$(basename \"$(dirname \"$PWD\")\" | tr '[:upper:]' '[:lower:]')\" > .env && docker-sync restart -c docker-sync.yml"

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": []

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "",

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "echo 'Hello World (postCreateCommand)'"

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
